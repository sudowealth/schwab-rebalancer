/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SleevesIndexRouteImport } from './routes/sleeves/index'
import { Route as RebalancingGroupsIndexRouteImport } from './routes/rebalancing-groups/index'
import { Route as ModelsIndexRouteImport } from './routes/models/index'
import { Route as DataFeedsIndexRouteImport } from './routes/data-feeds/index'
import { Route as AdminIndexRouteRouteImport } from './routes/admin/index.route'
import { Route as SettingsSecuritiesRouteImport } from './routes/settings/securities'
import { Route as SchwabSchwabRouteImport } from './routes/schwab/schwab'
import { Route as SchwabCallbackRouteImport } from './routes/schwab/callback'
import { Route as RebalancingGroupsGroupIdRouteImport } from './routes/rebalancing-groups/$groupId'
import { Route as ModelsModelIdRouteImport } from './routes/models/$modelId'
import { Route as DataFeedsDataFeedsRouteImport } from './routes/data-feeds/data-feeds'
import { Route as ApiHealthRouteImport } from './routes/api/health'
import { Route as AdminAdminRouteImport } from './routes/admin/admin'
import { Route as AdminUsersRouteRouteImport } from './routes/admin/users.route'
import { Route as AdminStatsRouteRouteImport } from './routes/admin/stats.route'
import { Route as ApiAuthSplatRouteImport } from './routes/api/auth/$'

const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SleevesIndexRoute = SleevesIndexRouteImport.update({
  id: '/sleeves/',
  path: '/sleeves/',
  getParentRoute: () => rootRouteImport,
} as any)
const RebalancingGroupsIndexRoute = RebalancingGroupsIndexRouteImport.update({
  id: '/rebalancing-groups/',
  path: '/rebalancing-groups/',
  getParentRoute: () => rootRouteImport,
} as any)
const ModelsIndexRoute = ModelsIndexRouteImport.update({
  id: '/models/',
  path: '/models/',
  getParentRoute: () => rootRouteImport,
} as any)
const DataFeedsIndexRoute = DataFeedsIndexRouteImport.update({
  id: '/data-feeds/',
  path: '/data-feeds/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRouteRoute = AdminIndexRouteRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsSecuritiesRoute = SettingsSecuritiesRouteImport.update({
  id: '/settings/securities',
  path: '/settings/securities',
  getParentRoute: () => rootRouteImport,
} as any)
const SchwabSchwabRoute = SchwabSchwabRouteImport.update({
  id: '/schwab/schwab',
  path: '/schwab/schwab',
  getParentRoute: () => rootRouteImport,
} as any)
const SchwabCallbackRoute = SchwabCallbackRouteImport.update({
  id: '/schwab/callback',
  path: '/schwab/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const RebalancingGroupsGroupIdRoute =
  RebalancingGroupsGroupIdRouteImport.update({
    id: '/rebalancing-groups/$groupId',
    path: '/rebalancing-groups/$groupId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ModelsModelIdRoute = ModelsModelIdRouteImport.update({
  id: '/models/$modelId',
  path: '/models/$modelId',
  getParentRoute: () => rootRouteImport,
} as any)
const DataFeedsDataFeedsRoute = DataFeedsDataFeedsRouteImport.update({
  id: '/data-feeds/data-feeds',
  path: '/data-feeds/data-feeds',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiHealthRoute = ApiHealthRouteImport.update({
  id: '/api/health',
  path: '/api/health',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAdminRoute = AdminAdminRouteImport.update({
  id: '/admin/admin',
  path: '/admin/admin',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/admin/admin.lazy').then((d) => d.Route))
const AdminUsersRouteRoute = AdminUsersRouteRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminStatsRouteRoute = AdminStatsRouteRouteImport.update({
  id: '/admin/stats',
  path: '/admin/stats',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiAuthSplatRoute = ApiAuthSplatRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/admin/stats': typeof AdminStatsRouteRoute
  '/admin/users': typeof AdminUsersRouteRoute
  '/admin/admin': typeof AdminAdminRoute
  '/api/health': typeof ApiHealthRoute
  '/data-feeds/data-feeds': typeof DataFeedsDataFeedsRoute
  '/models/$modelId': typeof ModelsModelIdRoute
  '/rebalancing-groups/$groupId': typeof RebalancingGroupsGroupIdRoute
  '/schwab/callback': typeof SchwabCallbackRoute
  '/schwab/schwab': typeof SchwabSchwabRoute
  '/settings/securities': typeof SettingsSecuritiesRoute
  '/admin': typeof AdminIndexRouteRoute
  '/data-feeds': typeof DataFeedsIndexRoute
  '/models': typeof ModelsIndexRoute
  '/rebalancing-groups': typeof RebalancingGroupsIndexRoute
  '/sleeves': typeof SleevesIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/admin/stats': typeof AdminStatsRouteRoute
  '/admin/users': typeof AdminUsersRouteRoute
  '/admin/admin': typeof AdminAdminRoute
  '/api/health': typeof ApiHealthRoute
  '/data-feeds/data-feeds': typeof DataFeedsDataFeedsRoute
  '/models/$modelId': typeof ModelsModelIdRoute
  '/rebalancing-groups/$groupId': typeof RebalancingGroupsGroupIdRoute
  '/schwab/callback': typeof SchwabCallbackRoute
  '/schwab/schwab': typeof SchwabSchwabRoute
  '/settings/securities': typeof SettingsSecuritiesRoute
  '/admin': typeof AdminIndexRouteRoute
  '/data-feeds': typeof DataFeedsIndexRoute
  '/models': typeof ModelsIndexRoute
  '/rebalancing-groups': typeof RebalancingGroupsIndexRoute
  '/sleeves': typeof SleevesIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/admin/stats': typeof AdminStatsRouteRoute
  '/admin/users': typeof AdminUsersRouteRoute
  '/admin/admin': typeof AdminAdminRoute
  '/api/health': typeof ApiHealthRoute
  '/data-feeds/data-feeds': typeof DataFeedsDataFeedsRoute
  '/models/$modelId': typeof ModelsModelIdRoute
  '/rebalancing-groups/$groupId': typeof RebalancingGroupsGroupIdRoute
  '/schwab/callback': typeof SchwabCallbackRoute
  '/schwab/schwab': typeof SchwabSchwabRoute
  '/settings/securities': typeof SettingsSecuritiesRoute
  '/admin/': typeof AdminIndexRouteRoute
  '/data-feeds/': typeof DataFeedsIndexRoute
  '/models/': typeof ModelsIndexRoute
  '/rebalancing-groups/': typeof RebalancingGroupsIndexRoute
  '/sleeves/': typeof SleevesIndexRoute
  '/api/auth/$': typeof ApiAuthSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/admin/stats'
    | '/admin/users'
    | '/admin/admin'
    | '/api/health'
    | '/data-feeds/data-feeds'
    | '/models/$modelId'
    | '/rebalancing-groups/$groupId'
    | '/schwab/callback'
    | '/schwab/schwab'
    | '/settings/securities'
    | '/admin'
    | '/data-feeds'
    | '/models'
    | '/rebalancing-groups'
    | '/sleeves'
    | '/api/auth/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/admin/stats'
    | '/admin/users'
    | '/admin/admin'
    | '/api/health'
    | '/data-feeds/data-feeds'
    | '/models/$modelId'
    | '/rebalancing-groups/$groupId'
    | '/schwab/callback'
    | '/schwab/schwab'
    | '/settings/securities'
    | '/admin'
    | '/data-feeds'
    | '/models'
    | '/rebalancing-groups'
    | '/sleeves'
    | '/api/auth/$'
  id:
    | '__root__'
    | '/'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/admin/stats'
    | '/admin/users'
    | '/admin/admin'
    | '/api/health'
    | '/data-feeds/data-feeds'
    | '/models/$modelId'
    | '/rebalancing-groups/$groupId'
    | '/schwab/callback'
    | '/schwab/schwab'
    | '/settings/securities'
    | '/admin/'
    | '/data-feeds/'
    | '/models/'
    | '/rebalancing-groups/'
    | '/sleeves/'
    | '/api/auth/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  AdminStatsRouteRoute: typeof AdminStatsRouteRoute
  AdminUsersRouteRoute: typeof AdminUsersRouteRoute
  AdminAdminRoute: typeof AdminAdminRoute
  ApiHealthRoute: typeof ApiHealthRoute
  DataFeedsDataFeedsRoute: typeof DataFeedsDataFeedsRoute
  ModelsModelIdRoute: typeof ModelsModelIdRoute
  RebalancingGroupsGroupIdRoute: typeof RebalancingGroupsGroupIdRoute
  SchwabCallbackRoute: typeof SchwabCallbackRoute
  SchwabSchwabRoute: typeof SchwabSchwabRoute
  SettingsSecuritiesRoute: typeof SettingsSecuritiesRoute
  AdminIndexRouteRoute: typeof AdminIndexRouteRoute
  DataFeedsIndexRoute: typeof DataFeedsIndexRoute
  ModelsIndexRoute: typeof ModelsIndexRoute
  RebalancingGroupsIndexRoute: typeof RebalancingGroupsIndexRoute
  SleevesIndexRoute: typeof SleevesIndexRoute
  ApiAuthSplatRoute: typeof ApiAuthSplatRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sleeves/': {
      id: '/sleeves/'
      path: '/sleeves'
      fullPath: '/sleeves'
      preLoaderRoute: typeof SleevesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rebalancing-groups/': {
      id: '/rebalancing-groups/'
      path: '/rebalancing-groups'
      fullPath: '/rebalancing-groups'
      preLoaderRoute: typeof RebalancingGroupsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/models/': {
      id: '/models/'
      path: '/models'
      fullPath: '/models'
      preLoaderRoute: typeof ModelsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data-feeds/': {
      id: '/data-feeds/'
      path: '/data-feeds'
      fullPath: '/data-feeds'
      preLoaderRoute: typeof DataFeedsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/securities': {
      id: '/settings/securities'
      path: '/settings/securities'
      fullPath: '/settings/securities'
      preLoaderRoute: typeof SettingsSecuritiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/schwab/schwab': {
      id: '/schwab/schwab'
      path: '/schwab/schwab'
      fullPath: '/schwab/schwab'
      preLoaderRoute: typeof SchwabSchwabRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/schwab/callback': {
      id: '/schwab/callback'
      path: '/schwab/callback'
      fullPath: '/schwab/callback'
      preLoaderRoute: typeof SchwabCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rebalancing-groups/$groupId': {
      id: '/rebalancing-groups/$groupId'
      path: '/rebalancing-groups/$groupId'
      fullPath: '/rebalancing-groups/$groupId'
      preLoaderRoute: typeof RebalancingGroupsGroupIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/models/$modelId': {
      id: '/models/$modelId'
      path: '/models/$modelId'
      fullPath: '/models/$modelId'
      preLoaderRoute: typeof ModelsModelIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/data-feeds/data-feeds': {
      id: '/data-feeds/data-feeds'
      path: '/data-feeds/data-feeds'
      fullPath: '/data-feeds/data-feeds'
      preLoaderRoute: typeof DataFeedsDataFeedsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/health': {
      id: '/api/health'
      path: '/api/health'
      fullPath: '/api/health'
      preLoaderRoute: typeof ApiHealthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/admin': {
      id: '/admin/admin'
      path: '/admin/admin'
      fullPath: '/admin/admin'
      preLoaderRoute: typeof AdminAdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/stats': {
      id: '/admin/stats'
      path: '/admin/stats'
      fullPath: '/admin/stats'
      preLoaderRoute: typeof AdminStatsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  AdminStatsRouteRoute: AdminStatsRouteRoute,
  AdminUsersRouteRoute: AdminUsersRouteRoute,
  AdminAdminRoute: AdminAdminRoute,
  ApiHealthRoute: ApiHealthRoute,
  DataFeedsDataFeedsRoute: DataFeedsDataFeedsRoute,
  ModelsModelIdRoute: ModelsModelIdRoute,
  RebalancingGroupsGroupIdRoute: RebalancingGroupsGroupIdRoute,
  SchwabCallbackRoute: SchwabCallbackRoute,
  SchwabSchwabRoute: SchwabSchwabRoute,
  SettingsSecuritiesRoute: SettingsSecuritiesRoute,
  AdminIndexRouteRoute: AdminIndexRouteRoute,
  DataFeedsIndexRoute: DataFeedsIndexRoute,
  ModelsIndexRoute: ModelsIndexRoute,
  RebalancingGroupsIndexRoute: RebalancingGroupsIndexRoute,
  SleevesIndexRoute: SleevesIndexRoute,
  ApiAuthSplatRoute: ApiAuthSplatRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
