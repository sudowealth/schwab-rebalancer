#!/usr/bin/env tsx

/**
 * Set up local development environment with secrets and configuration.
 * - DB_ENCRYPTION_KEY: 32 bytes for AES-256 encryption of Schwab API credentials
 * - CRON_KEY: 32 bytes for API worker authentication
 * - BETTER_AUTH_SECRET: 32 bytes for session signing
 * Run: npm run setup
 */

import { existsSync, writeFileSync } from 'node:fs';
import { join } from 'node:path';
import { generateSecret } from '../src/lib/crypto';

async function main() {
  console.log('üîß Setting up local development environment...\n');

  const [encryptionKey, cronKey, authSecret] = await Promise.all([
    generateSecret(32), // DB_ENCRYPTION_KEY: 32 bytes for AES-256
    generateSecret(32), // CRON_KEY: 32 bytes for API auth
    generateSecret(32), // BETTER_AUTH_SECRET: 32 bytes for session signing
  ]);

  const envPath = join(process.cwd(), '.env.local');

  // Check if .env.local already exists
  if (existsSync(envPath)) {
    console.log('‚ö†Ô∏è  .env.local already exists!');
    console.log('   To avoid overwriting existing configuration, here are your generated secrets:');
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
    console.log(`CRON_KEY=${cronKey}`);
    console.log(`DB_ENCRYPTION_KEY=${encryptionKey}`);
    console.log(`BETTER_AUTH_SECRET=${authSecret}`);
    console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
    console.log('üìù Add these to your existing .env.local file.');
    return;
  }

  // Create .env.local with all defaults
  const envContent = `# Schwab Portfolio Rebalancing Platform - Local Development Environment
# Generated by: npm run setup
# Generated on: ${new Date().toISOString()}

# ==========================================
# REQUIRED SECRETS (Generated Securely)
# ==========================================

# Protects scheduled worker API endpoints
CRON_KEY=${cronKey}

# Encrypts Schwab API credentials before database storage
DB_ENCRYPTION_KEY=${encryptionKey}

# Signs JWTs for authentication
BETTER_AUTH_SECRET=${authSecret}

# ==========================================
# REQUIRED DEFAULTS
# ==========================================

# Enable single-user mode (recommended for personal deployments)
INDIVIDUAL_USE=true

# Set development environment
NODE_ENV=development

# ==========================================
# OPTIONAL INTEGRATIONS
# ==========================================

# Email notifications (optional - get from https://resend.com)
# RESEND_API_KEY=your-resend-api-key

# Schwab API Integration (see docs/SCHWAB_SETUP.md)
# SCHWAB_CLIENT_ID=your-schwab-client-id
# SCHWAB_CLIENT_SECRET=your-schwab-client-secret

# ==========================================
# DATABASE (Usually auto-configured by Neon)
# ==========================================

# Database URL will be automatically set by Neon when deploying
# For local development, Neon handles this automatically
`;

  writeFileSync(envPath, envContent, 'utf8');

  console.log('‚úÖ Local development environment configured!');
  console.log(`   üìÅ Created: ${envPath}`);
  console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ');
  console.log('üîë Generated Secrets:');
  console.log(`   CRON_KEY: ${cronKey.substring(0, 10)}...`);
  console.log(`   DB_ENCRYPTION_KEY: ${encryptionKey.substring(0, 10)}...`);
  console.log(`   BETTER_AUTH_SECRET: ${authSecret.substring(0, 10)}...`);
  console.log('‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n');
  console.log('üöÄ Ready to develop!');
  console.log('   1. Review the generated .env.local file');
  console.log('   2. Add any optional integrations (email, Schwab API)');
  console.log('   3. Run: pnpm dev');
  console.log('\nüìå Security Notes:');
  console.log('   ‚Ä¢ Never commit .env.local to version control');
  console.log('   ‚Ä¢ Back up these secrets if they guard real data');
  console.log('   ‚Ä¢ Use the same DB_ENCRYPTION_KEY across environments for encrypted data');
}

main().catch((error) => {
  console.error('\n‚ùå Failed to set up development environment');
  console.error(error);
  process.exit(1);
});
